<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <properties>
    <title>Beigesoftware, Beige-WEB-Store</title>
   </properties>

  <body>

    <section name="Beige WEB Store specification. Specifics of goods/service.">
      
      <h4>Goods/services specifics</h4>
      <p>Used to describe and filter goods/services.</p>
      <p>Model SpecificsOfItem, e.g. "Screen size":
        <ul>
          <li>AHasNameIdLongVersion fields</li>
          <li>itsGroop - SpecificsOfItemGroup, if exist e.g. "Monitor" for its size, web-cam, LED-type</li>
          <li>itsType - ESpecificsItemType, not null, default ESpecificsItemType.STRING</li>
          <li>isUseInFilter - Boolean, not null, default false</li>
          <li>isShowInList - Boolean, not null, default false - show only in goods page</li>
!!NOT NULL not fixed in old DB, only programmatically - it's enough       <li>itsIndex - Integer, not null, used for ordering when printing.</li>
          <li>description - String.</li>
          <li>chooseableSpecificsType - ChooseableSpecificsType, if it is chooseable</li>
        </ul>
      </p>
      <h5>Rendering of specifics</h5>
      <p>Entity HtmlTemplate:
        <ul>
          <li>AHasNameIdLongVersion (autogenerated ID) fields</li>
          <li>htmlTemplate - String, not null, HTML template e.g. "&lt;div class="gs-spec"&gt;&lt;span class="gl-spec-spec"&gt;:VALUE1&lt;/span&gt;:VALUE2&lt;/div&gt;"
            :VALUE1/2 will be changed to actual ones.</li>
        </ul>
      </p>
      <p>Its useful to use separate specifics for same thing for filtering and other purposes.
      But it's need to group them (e.g. when printing) by using Specific Group, e.g. "Memory" has child "MemorySize" and "MemoryType" e.g. 8GB and DDR3.
      So they should be printed together in their group.</p>
      <p>Entity SpecificsOfItemGroup:
        <ul>
          <li>AHasNameIdLongVersion fields</li>
          <li>description - String, e.g. "for notebooks".</li>
          <li>templateStart - HtmlTemplate if assigned.</li>
          <li>templateEnd - HtmlTemplate if assigned.</li>
          <li>templateDetail - HtmlTemplate if assigned.</li>
        </ul>
      </p>
      <p>Model GoodsSpecific, e.g. "Monitor AJK A4565"-"Screen size = 17inch":
        <ul>
          <li>googs - InvItem, not null</li>
          <li>specifics - SpecificsOfItem, not null</li>
          <li>numericValue1 - BigDecimal, if present</li>
          <li>numericValue2 - BigDecimal, if present</li>
          <li>longValue1 - Long, if present</li>
          <li>longValue2 - Long, if present</li>
          <li>stringValue1 - String, if present</li>
          <li>stringValue2 - String, if present</li>
        </ul>
        Pair {"googs", "specifics"} is primary key
      </p>
      <p>Model Enum ESpecificsItemType described how to treat (edit/print/filter) assigned specifics:
        <ul>
          <li>TEXT - 0, default, printed as text.</li>
          <li>BIGDECIMAL - 1, for specifics like "Weight", stringValue1 may hold unit of measure.</li>
          <li>INTEGER - 2, for specifics like "MemorySize", stringValue1 may hold unit of measure.</li>
          <li>IMAGE - 3, stringValue1 hold URL to image, stringValue2 - uploaded file path if it was uploaded.</li>
          <li>IMAGE_IN_SET - 4, stringValue1 hold URL to image, stringValue2 - uploaded file path if it was uploaded. Image that belongs to set of images ordered and gathered
            (they must have adjacent indexes) by itsIndex, longValue1 may hold "showSizeTypeClass".</li>
          <li>FILE - 5, stringValue1 hold URL to file, e.g. "get brochure", stringValue2 - uploaded file path if it was uploaded.</li>
          <li>FILE_EMBEDDED - 6, show it on page, stringValue1 hold URL to file e.g. a PDF,
            longValue1 may hold "showSizeTypeClass", e.g. class=1 means show 30% of page size, stringValue2 - uploaded file path if it was uploaded.</li>
          <li>LINK - 7, stringValue1 hold URL.</li>
          <li>LINK_EMBEDDED - 8, show HTML page. stringValue1 hold URL, longValue1 may hold "showSizeClass".</li>
          <li>CHOOSEABLE_SPECIFICS - 10, longValue1 hold ID of chosen from list of ChooseableSpecifics, stringValue1 hold appearance to improve performance,
            and so does longValue2 - ChooseableSpecificsType. This is the mostly used method.</li>
        </ul>
        It can be extended.
      </p>

      <h5>Implementation of choosing from list e.g. OS for computer.</h5>
      <p>Entity ChooseableSpecifics e.g. "MS Windows 10":
        <ul>
          <li>AHasNameIdLongVersion (autogenerated ID) fields</li>
          <li>itsType - ChooseableSpecificsType, not null, used to filter chosen specifics e.g. "Operation System ID=12"</li>
        </ul>
      </p>
      <p>Entity ChooseableSpecificsType e.g. "Operation System":
        <ul>
          <li>AHasNameIdLongVersion (manual ID, e.g. 1011 for Operation System) fields</li>
          <li>description - String, e.g. "for computers".</li>
          <li>htmlTemplate - HtmlTemplate if assigned.</li>
        </ul>
      </p>
      
      <h5>Refreshing goods specific in the list.</h5>
      <p>
        Set of goods specifics that must be refreshed is retrieved with needed fields include:
        <ul>
          <li>GoodsSpecific.[all_fields] specifics - level 3</li>
          <li>GoodsSpecific.goods[itsName]</li>
          <li>GoodsSpecific.specifics.itsName</li>
          <li>GoodsSpecific.specifics.itsType</li>
          <li>GoodsSpecific.specifics.itsGroup.[templateStart/End/Detail(only ID), itsName]</li>
          <li>GoodsSpecific.specifics.chooseableSpecificsType.htmlTemplate(only ID)</li>
          Retrieving full HTML templates is memory unfriendly in this case.
        </ul>  
        where clause for Beige-ORM that retrieve GS is:
<pre style="white-space: pre-wrap;"> 
where SPECIFICS.ISSHOWINLIST=1 and GOODSSPECIFIC.GOODS in
(select distinct  GOODS from GOODSSPECIFIC join SPECIFICSOFITEM on GOODSSPECIFIC.SPECIFICS=SPECIFICSOFITEM.ITSID where ISSHOWINLIST=1 and GOODSSPECIFIC.ITSVERSION>:LASTREFRESHEDVERSION)
order by GOODS.ITSID, SPECIFICS.ITSINDEX;
</pre>
      </p>

    </section>

  </body>

</document>
