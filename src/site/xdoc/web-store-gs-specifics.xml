<?xml version="1.0" encoding="UTF-8"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <properties>
    <title>Beigesoft ™ WEB Store. Specifics of goods/service.</title>
   </properties>

  <body>

    <section name="Beigesoft ™ WEB Store specification. Specifics of goods/service.">
      
      <h4>Goods/services specifics (characteristics/features/traits/exact details)</h4>
      <p>It's used to describe and to filter goods/services.</p>
      <p>Model SpecificsOfItem, e.g. "Screen size":
        <ul>
          <li>AHasNameIdLongVersion fields (ID by hand)</li>
          <li>itsGroop - SpecificsOfItemGroup, if exist e.g. "Monitor" for its size, web-cam, LED-type</li>
          <li>itsType - ESpecificsItemType, not null, default ESpecificsItemType.STRING</li>
          <li>isUseInFilter - Boolean, not null, default false</li>
          <li>isShowInList - Boolean, not null, default false - show only in goods page</li>
!!NOT NULL not fixed in old DB, only programmatically - it's enough       <li>itsIndex - Integer, not null, used for ordering when printing.</li>
          <li>description - String.</li>
          <li>chooseableSpecificsType - ChooseableSpecificsType, if it is chooseable</li>
          <li>useForOrdering - Boolean, if used for list ordering, false default</li>
          <li>tempHtml - HtmlTemplate if assigned, e.g. ":SPECNM :STRVAL1 :LONGVAL1", this overrides SpecificsOfItemGroup.templateDetail.</li>
        </ul>
      </p>
      <h5>Rendering of specifics</h5>
      <p>Entity SettingsAdd has additional fields:
        <ul>
          <li>specHtmlStart - String, null default, HTML template for whole specifics start, e.g. "&lt;ul&gt;".</li>
          <li>specHtmlEnd - String, null default, HTML template for whole specifics end, e.g. "&lt;\ul&gt;".</li>
          <li>specGrHtmlStart - String, null default, HTML template for group specifics start, e.g. "&lt;li&gt;".</li>
          <li>specGrHtmlEnd - String, null default, HTML template for group specifics end, e.g. "&lt;\li&gt;".</li>
          <li>specSeparator - String, not null, specifics separator, default ","</li>
          <li>specGrSeparator - String, null default, specifics groups separator, e.g ";"</li>
        </ul>
      </p>
      <p>Entity HtmlTemplate:
        <ul>
          <li>AHasNameIdLongVersion (autogenerated ID) fields</li>
          <li>htmlTemplate - String, not null, HTML template e.g. "&lt;div class="gs-spec"&gt;&lt;span class="gl-spec-spec"&gt;:VALUE1&lt;/span&gt;:VALUE2&lt;/div&gt;"
            :VALUE1/2 will be changed to actual ones.</li>
        </ul>
      </p>
      <p>If it's need to group specifics (e.g. when printing) by using Specifics Group, e.g. "Memory" has child "MemorySize" and "MemoryType" e.g. 8GB and DDR3.
      So they should be printed together in their group.</p>
      <p>Entity SpecificsOfItemGroup:
        <ul>
          <li>AHasNameIdLongVersion fields (ID by hand)</li>
          <li>description - String, e.g. "for notebooks".</li>
          <li>templateStart - HtmlTemplate if assigned, e.g. "&lt;b&gt; :GROUPNM : &lt;\b&gt;".</li>
          <li>templateEnd - HtmlTemplate if assigned, e.g. "&lt;/li&gt;".</li>
          <li>templateDetail - HtmlTemplate if assigned, e.g. ":STRVAL1".</li>
        </ul>
      </p>
      <p>Model GoodsSpecific, e.g. "Monitor AJK A4565"-"Screen size = 17inch":
        <ul>
          <li>googs - InvItem, not null</li>
          <li>specifics - SpecificsOfItem, not null</li>
          <li>numericValue1 - BigDecimal, if present</li>
          <li>numericValue2 - BigDecimal, if present</li>
          <li>longValue1 - Long, if present</li>
          <li>longValue2 - Long, if present</li>
          <li>stringValue1 - String, if present</li>
          <li>stringValue2 - String, if present</li>
          <li>stringValue3 - String, if present</li>
          <li>stringValue4 - String, if present</li>
        </ul>
        Pair {"googs", "specifics"} is primary key
      </p>
      <p>Model Enum ESpecificsItemType described how to treat (edit/print/filter) assigned specifics:
        <ul>
          <li>TEXT - 0, default, printed as text.</li>
          <li>BIGDECIMAL - 1, for specifics like "Weight", longValue1 may hold unit of measure ID and stringValue1 UOM name (def lang) to improve performance, longValue2 holds decimal places - 2 default.</li>
          <li>INTEGER - 2, for specifics like "MemorySize", longValue1 may hold unit of measure ID and stringValue1 UOM name (def lang) to improve performance.</li>
          <li>IMAGE - 3, stringValue1 hold URL to image, stringValue2 - uploaded file path if it was uploaded.</li>
          <li>IMAGE_IN_SET - 4, stringValue1 hold URL to image, stringValue2 - uploaded file path if it was uploaded. Image that belongs to set of images ordered and gathered
            (they must have adjacent indexes) by itsIndex, longValue1 may hold "showSizeTypeClass".
            stringValue3 may hold image description. stringValue4 may hold images set description (the first in set).</li>
          <li>FILE - 5, stringValue1 hold URL to file, e.g. "get brochure", stringValue2 - uploaded file path if it was uploaded.
            stringValue3 may hold file description. stringValue4 may hold files set description (the first in the group).</li>
          <li>FILE_EMBEDDED - 6, show it on page, stringValue1 hold URL to file e.g. a PDF,
            longValue1 may hold "showSizeTypeClass", e.g. class=1 means show 30% of page size, stringValue2 - uploaded file path if it was uploaded.</li>
          <li>LINK - 7, stringValue1 hold URL.</li>
          <li>LINK_EMBEDDED - 8, show HTML page. stringValue1 holds URL, longValue1 may holds "showSizeClass".</li>
          <li>CHOOSEABLE_SPECIFICS - 10, longValue1 hold ID of chosen from list of ChooseableSpecifics, stringValue1 hold appearance (def lang) to improve performance,
            and so does longValue2 - ChooseableSpecificsType. This is the mostly used method.</li>
        </ul>
        It can be extended.
      </p>

      <h5>Implementation of choosing from list e.g. OS for computer.</h5>
      <p>Entity ChooseableSpecifics e.g. "MS Windows 10":
        <ul>
          <li>AHasNameIdLongVersion (autogenerated ID) fields</li>
          <li>itsType - ChooseableSpecificsType, not null, used to filter chosen specifics e.g. "Operation System ID=12"</li>
        </ul>
      </p>
      <p>Entity ChooseableSpecificsType e.g. "Operation System":
        <ul>
          <li>AHasNameIdLongVersion (manual ID, e.g. 1011 for Operation System) fields</li>
          <li>description - String, e.g. "for computers".</li>
          <li>htmlTemplate - HtmlTemplate if assigned.</li>
        </ul>
      </p>
      
      <h5>Refreshing goods specific in the list.</h5>
      <p>
        Set of goods specifics that must be refreshed is retrieved with needed fields include:
        <ul>
          <li>GoodsSpecific.[all_fields] specifics - level 3</li>
          <li>GoodsSpecific.goods[itsName]</li>
          <li>GoodsSpecific.specifics.itsName</li>
          <li>GoodsSpecific.specifics.isShowInList</li>
          <li>GoodsSpecific.specifics.itsType</li>
          <li>GoodsSpecific.specifics.itsGroup.[templateStart/End/Detail(only ID), itsName]</li>
          <li>GoodsSpecific.specifics.chooseableSpecificsType.htmlTemplate(only ID)</li>
          Retrieving full HTML templates is memory unfriendly in this case.
        </ul>  
        where clause for Beige-ORM that retrieve GS is:
<pre style="white-space: pre-wrap;"> 
where GOODSSPECIFIC.GOODS in
(select distinct  GOODS from GOODSSPECIFIC join SPECIFICSOFITEM on GOODSSPECIFIC.SPECIFICS=SPECIFICSOFITEM.ITSID where GOODSSPECIFIC.ITSVERSION>:LASTREFRESHEDVERSION)
order by GOODS.ITSID, SPECIFICS.ITSINDEX;
</pre>
This query retrieves all goods specifics include "not in the list", if there is any detail specific then "detailsMethod" will be not null, so goods name will be link to the detail page.
      </p>

      <h5>Specifics in list view</h5>
      <p>List view is made by PrcRefreshGoods/ServicesInList and stored into ItemInList.specificInList</p>
      <p>
        It should be implemented automatically making "specifics in list" for such examples:
<div>
  (i6-2001M, 2000GHz; DDR3, 4 GB, 1600GHz; 17 In, 1600X800; HDD, 500 GB, 7400 RPM; WIFI; Bluetooth; Linux; 3.89 lbs)
</div>
<div>
  <b>CPU:</b> Intel, I6-2001M, 4 Cores, 2000GHz; <b>RAM:</b> DDR3, 4 GB, 1600 GHz; <b>Monitor:</b> 17 In, 1600X800;
  <b>Hard drive:</b> HDD, 500 GB, 7200RPM; <b>WIFI:</b> 802.11ac; <b>Bluetooth:</b> 4.1; <b>OS:</b> Linux; <b>Weight:</b> 3.89 lbs
</div>
<div>
  <ul style="font-size: small;">
    <li><b>CPU:</b> Intel, I6-2001M, 4 Cores, 2000GHz</li>
    <li><b>RAM:</b> DDR3, 4 GB, 1600 GHz</li>
    <li><b>Hard drive:</b> HDD, 500 GB, 7200 RPM</li>
    <li><b>WIFI:</b> 802.11ac</li>
    <li><b>Bluetooth:</b> 4.1</li>
    <li><b>OS:</b> Linux</li>
    <li><b>Weight:</b> 3.89 lbs</li>
  </ul> 
</div>
      </p>
    </section>

  </body>

</document>
